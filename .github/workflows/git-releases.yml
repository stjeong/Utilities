on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release

jobs:

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{env.BUILD_CONFIGURATION}} ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: false
          prerelease: false

  build:
    name: Release Build
    needs: create_release

    runs-on: windows-latest
    steps:
      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force

      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Decrypt snk
        run: gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.SNKFILE_DEC_KEY }}" --output ../SeongTaeJeong.snk ./SeongTaeJeong.snk.gpg

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Build
        run: |
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: Zip Artifacts
        run: |
          powershell Compress-7Zip ".\delunused\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip
          powershell Compress-7Zip ".\excludedportrange\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append
          powershell Compress-7Zip ".\netcat\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append
          powershell Compress-7Zip ".\pptfont\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append
          powershell Compress-7Zip ".\ucurl\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append
          powershell Compress-7Zip ".\wol\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append
          powershell Compress-7Zip ".\base64\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append
          powershell Compress-7Zip ".\hexcode\bin\${{env.BUILD_CONFIGURATION}}" -ArchiveFileName "Utilities.zip" -Format Zip -Append

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./Utilities.zip
          asset_name: Utilities.zip
          asset_content_type: application/zip
